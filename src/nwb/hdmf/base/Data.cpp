#include "nwb/hdmf/base/Data.hpp"

using namespace AQNWB::NWB;

// Register the base Data class
REGISTER_SUBCLASS_IMPL(Data)

/** Constructor */
Data::Data(const std::string& path, std::shared_ptr<AQNWB::IO::BaseIO> io)
    : RegisteredType(path, io)
{
}

namespace AQNWB::NWB
{

// Explicitly instantiate the DataTyped template for all common data types.
// This ensures that these specializations are generated by the compiler,
// reducing compile times and ensuring availability throughout the program.
template class DataTyped<std::any>;
template class DataTyped<uint8_t>;
template class DataTyped<uint16_t>;
template class DataTyped<uint32_t>;
template class DataTyped<uint64_t>;
template class DataTyped<int8_t>;
template class DataTyped<int16_t>;
template class DataTyped<int32_t>;
template class DataTyped<int64_t>;
template class DataTyped<float>;
template class DataTyped<double>;
template class DataTyped<std::string>;
}  // namespace AQNWB::NWB
