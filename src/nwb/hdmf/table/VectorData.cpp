#include "nwb/hdmf/table/VectorData.hpp"

using namespace AQNWB::NWB;

// Register the base VectorData class
REGISTER_SUBCLASS_IMPL(VectorData)

VectorData::VectorData(const std::string& path, std::shared_ptr<IO::BaseIO> io)
    : Data(path, io)
{
}

namespace AQNWB::NWB
{
// Explicitly instantiate the VectorDataTyped template for all common data
// types. This ensures that these specializations are generated by the compiler,
// reducing compile times and ensuring availability throughout the program.
template class VectorDataTyped<std::any>;
template class VectorDataTyped<uint8_t>;
template class VectorDataTyped<uint16_t>;
template class VectorDataTyped<uint32_t>;
template class VectorDataTyped<uint64_t>;
template class VectorDataTyped<int8_t>;
template class VectorDataTyped<int16_t>;
template class VectorDataTyped<int32_t>;
template class VectorDataTyped<int64_t>;
template class VectorDataTyped<float>;
template class VectorDataTyped<double>;
template class VectorDataTyped<std::string>;
}  // namespace AQNWB::NWB
