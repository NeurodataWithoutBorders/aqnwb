# Configuration for Doxygen for use with CMake
# Only options that deviate from the default are included
# To create a new Doxyfile containing all available options, call `doxygen -g`

# Get Project name and version from CMake
PROJECT_NAME = "@PROJECT_NAME@"
PROJECT_NUMBER = "@PROJECT_VERSION@"


# Expand the DEFINE_FIELD macro to create documentation also for functions created by
# this macro as part of the RegisterType.hpp logic, which simplifies the creation
# of functions for lazy read access. Unfortunately, expanding the macro directly
# from the source code directly for some reason did not work with Doxygen and
# using "EXPAND_AS_DEFINED = DEFINE_FIELD" also failed. As a workaround we here define
# a simplified version of the macro as part of the PREDEFINED key to create a
# simplified expansion of the macro for documentation purposes
MACRO_EXPANSION = YES
PREDEFINED           += "DEFINE_ATTRIBUTE_FIELD(name, default_type, fieldPath, description)=/** description */ template<typename VTYPE = default_type> inline std::unique_ptr<IO::ReadDataWrapper<AttributeField, VTYPE>> name() const;"
PREDEFINED           += "DEFINE_DATASET_FIELD(readName, writeName, default_type, fieldPath, description)=/** description */ template<typename VTYPE = default_type> inline std::unique_ptr<IO::ReadDataWrapper<DatasetField, VTYPE>> readName() const; inline std::shared_ptr<IO::BaseRecordingData> writeName(bool reset = false); "
PREDEFINED           += "DEFINE_REGISTERED_FIELD(name, registeredType, fieldPath, description)=/** description */ template<typename RTYPE = registeredType> inline std::shared_ptr<RTYPE> name() const;" 
PREDEFINED           += "DEFINE_REFERENCED_REGISTERED_FIELD(name, registeredType, fieldPath, description)=/** description */ template<typename RTYPE = registeredType> inline std::shared_ptr<RTYPE> name() const;" 
EXPAND_ONLY_PREDEF   = YES


# Add sources
INPUT = "@PROJECT_SOURCE_DIR@/src" "@PROJECT_SOURCE_DIR@/docs/pages"
RECURSIVE = YES
EXAMPLE_PATH = "@PROJECT_SOURCE_DIR@/tests"  "@PROJECT_SOURCE_DIR@/.github/CODE_OF_CONDUCT.md"  "@PROJECT_SOURCE_DIR@/Legal.txt" "@PROJECT_SOURCE_DIR@/LICENSE"
IMAGE_PATH = "@PROJECT_SOURCE_DIR@/resources/images"
EXTRACT_ALL = YES
RECURSIVE = YES
OUTPUT_DIRECTORY = "@DOXYGEN_OUTPUT_DIRECTORY@"

# Also show private members in the docs,
EXTRACT_PRIVATE = YES
# Also show static members in the docs
EXTRACT_STATIC      = YES
# HIDE_UNDOC_MEMBERS = YES

# Enable Markdown support
MARKDOWN_SUPPORT = YES

# Enable the call and caller graphs (this increases built time but seems reasonable for AqNWB)
CALL_GRAPH           = YES
CALLER_GRAPH         = YES

# set relative include paths
FULL_PATH_NAMES = YES
STRIP_FROM_PATH = "@PROJECT_SOURCE_DIR@/include" "@PROJECT_SOURCE_DIR@"
STRIP_FROM_INC_PATH =

# Generate outputs
GENERATE_XML = NO
GENERATE_HTML = YES
GENERATE_LATEX = NO
XML_PROGRAMLISTING = NO
CREATE_SUBDIRS = NO

# Doxygen Awesome Style settings for sidebar-only layout
GENERATE_TREEVIEW      = YES # required!
DISABLE_INDEX          = NO
FULL_SIDEBAR           = YES
HTML_EXTRA_STYLESHEET  =  "@PROJECT_SOURCE_DIR@/docs/layout/doxygen-awesome.css" \
                         "@PROJECT_SOURCE_DIR@/docs/layout/doxygen-awesome-sidebar-only.css"
HTML_COLORSTYLE        = LIGHT # required with Doxygen >= 1.9.5

# Use Graphviz to generate UML diagrams as vector graphics with transparent background
HAVE_DOT = YES
DOT_IMAGE_FORMAT = svg
# DOT_TRANSPARENT = YES
INTERACTIVE_SVG = YES  # Enable highlighting by hovering on elements

# Add header customization
HTML_HEADER            = "@PROJECT_SOURCE_DIR@/docs/layout/header.html"
PROJECT_LOGO           = "@PROJECT_SOURCE_DIR@/resources/logo/aqnwb-logo.png"

# Fail on warnings
WARN_AS_ERROR = FAIL_ON_WARNINGS_PRINT